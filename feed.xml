<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://github.com/rajataghi/my-blog/my-blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://github.com/rajataghi/my-blog/my-blog/" rel="alternate" type="text/html" /><updated>2020-11-03T06:00:56+00:00</updated><id>https://github.com/rajataghi/my-blog/my-blog/feed.xml</id><title type="html">Rajat Aghi’s Blog</title><subtitle>This is Rajat Aghi's jekyll blog!</subtitle><entry><title type="html">My First Blog Post</title><link href="https://github.com/rajataghi/my-blog/my-blog/no/code/2020/11/02/my-first-blog-post.html" rel="alternate" type="text/html" title="My First Blog Post" /><published>2020-11-02T04:09:18+00:00</published><updated>2020-11-02T04:09:18+00:00</updated><id>https://github.com/rajataghi/my-blog/my-blog/no/code/2020/11/02/my-first-blog-post</id><content type="html" xml:base="https://github.com/rajataghi/my-blog/my-blog/no/code/2020/11/02/my-first-blog-post.html">&lt;p&gt;This is my first blog post. Today, I found a subreddit which has deals on various parts &lt;a href=&quot;https://www.reddit.com/r/buildapcsales&quot;&gt;required to build a pc&lt;/a&gt;. Surprisingly, it also has deals on pc-setup peripherals like chairs and tables. All post titles seem to have a title in their category name (ssd, mouse, chair etc.). I’ll try to build a parser that can segregate the posts by category, making it easier for myself to keep track of things I am interested in. I plan to keep this blog as a live document, updating it along the way as a way to track my progress and keep me motivated to do this. Excited to get started tomorrow!&lt;/p&gt;

&lt;h3 id=&quot;day-1&quot;&gt;Day 1&lt;/h3&gt;
&lt;p&gt;I started looking into the reddit API to see how I can parse through all of the submissions on a subreddit. Found the official documentation to be very underwhelming. I did find this  wrapper on the API, &lt;a href=&quot;https://github.com/pushshift/api&quot;&gt;pushshift&lt;/a&gt;, which can help me get what I need. Seems like I need to make a single GET request to this wrapper and it will return a list of json objects that I can then parse.&lt;/p&gt;

&lt;h4 id=&quot;deciding-what-framework-and-language-to-use&quot;&gt;Deciding what framework and language to use&lt;/h4&gt;
&lt;p&gt;I’ve been using Java spring boot at work recently, so I am most fluent in that at the moment but that seems like a bit of overkill for this app. I think I will use react for this though. I learnt that recently but never really built anything with it(except for the demo application in the &lt;a href=&quot;https://scrimba.com/learn/learnreact&quot;&gt;coursework&lt;/a&gt;). If I do only front-end though, I will have query and parse the api on every page load. I don’t think this subreddit gets that many submissions to warrant such frequent updates. I could make a small backend in python that pre-processes new posts everyday and then my front-end can just query this backend without having to parse and pre-packaged data. Maybe there is a way to do this pre-packaging in react for at least distinct user sessions? Not sure, but for now, I’ll let it be only front-end.&lt;/p&gt;

&lt;p&gt;If its too slow, I can think about having a backend. So &lt;strong&gt;react&lt;/strong&gt; it is!&lt;/p&gt;</content><author><name></name></author><category term="No" /><category term="Code" /><summary type="html">This is my first blog post. Today, I found a subreddit which has deals on various parts required to build a pc. Surprisingly, it also has deals on pc-setup peripherals like chairs and tables. All post titles seem to have a title in their category name (ssd, mouse, chair etc.). I’ll try to build a parser that can segregate the posts by category, making it easier for myself to keep track of things I am interested in. I plan to keep this blog as a live document, updating it along the way as a way to track my progress and keep me motivated to do this. Excited to get started tomorrow!</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="https://github.com/rajataghi/my-blog/my-blog/jekyll/update/2020/11/02/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2020-11-02T04:09:18+00:00</published><updated>2020-11-02T04:09:18+00:00</updated><id>https://github.com/rajataghi/my-blog/my-blog/jekyll/update/2020/11/02/welcome-to-jekyll</id><content type="html" xml:base="https://github.com/rajataghi/my-blog/my-blog/jekyll/update/2020/11/02/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>